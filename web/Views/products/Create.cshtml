@using System.Activities.Statements
@using System.Activities.Statements
@using Newtonsoft.Json
@model domaine.entities.product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_BackOffice.cshtml";
}
@section title
{
    PRODUCTS
}
@section CSS
{
    <!-- Bootstrap Colorpicker -->
    <link href="~/Content/vendors/mjolnic-bootstrap-colorpicker/dist/css/bootstrap-colorpicker.min.css" rel="stylesheet">
<link href="~/Content/css/fileinput.min.css" rel="stylesheet" />
}

<h2>Add new product</h2>
@if(Request.QueryString["msg"] != null){ 
    <div class="alert alert-danger alert-dismissable">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
        <strong>These words are filtered !!!</strong>@{
                                        List<string> strarrayString = JsonConvert.DeserializeObject<List<string>>(@Request.QueryString["msg"]);
                                            
            
                                        <ul>
                                            @foreach (string s in strarrayString)
                                            {
                                                <li>@Html.Raw(s)</li>
                                            }
                                        </ul>

                                            

                                    }

    </div>
}
@using (Html.BeginForm("Create", "products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="back-to-list">
            @Html.ActionLink("Back to List", "Index")
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        
        
        <div class="form-group">
            @Html.LabelFor(model => model.sousCategorieProdId, "sousCategorieProdId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("sousCategorieProdId", null, htmlAttributes: new { @class = "form-control col-md-7 col-xs-12" })
                @Html.ValidationMessageFor(model => model.sousCategorieProdId, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Marque, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Marque, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.Marque, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Modele, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Modele, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.Modele, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">

            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group demo2 colorpicker-element">
                    @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                    <span class="input-group-addon"><i style="background-color: rgb(91, 58, 163);"></i></span>
                    @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="file" id="file" required=""/>
                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@section scripts
{
    <!-- Bootstrap Colorpicker -->
    <script src="~/Content/vendors/mjolnic-bootstrap-colorpicker/dist/js/bootstrap-colorpicker.min.js"></script>
    <script src="~/Content/js/fileinput.min.js"></script>
    <script>
        $('#file').fileinput();
    </script>
}
